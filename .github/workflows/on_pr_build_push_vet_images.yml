name: On PR Build Push Vet

on:
  pull_request:
    branches:
      - main

env:
  BRANCH: ${{ github.head_ref }}
  COMMIT: ${{ github.event.pull_request.head.sha }}

  VETTED_IMAGE: ${{ github.repository }}_${{ github.head_ref }}:${{ github.event.pull_request.head.sha }}
  UNVETTED_IMAGE: ${{ github.repository }}_${{ github.head_ref }}_unvetted:${{ github.event.pull_request.head.sha }}
  DEVENV_IMAGE: ${{ github.repository }}_${{ github.head_ref }}_dev:${{ github.event.pull_request.head.sha }}

jobs:

  this-could-go-git-info:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Git log
        run: git log

      - name: PR Branch
        run: echo ${BRANCH}

      - name: Last commit of PR branch
        run: echo ${COMMIT}

      - name: Show GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  build-and-push-branch-devenv:
    uses: brianjbayer/gh-actions-test-bed/.github/workflows/build-push-image.yml@reusable-workflows
    with:
      image: ${{ github.repository }}_${{ github.head_ref }}_dev:${{ github.event.pull_request.head.sha }}
      buildopts: --target devenv
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # steps:
    #   - uses: actions/checkout@v1

    #   - name: Check originally no mutation to local
    #     run: "[ ! -f foobear ]"

    #   - name: Run and and mount source and mutate in the dev env
    #     run: docker run --rm -v ${PWD}:/app ${DEVENV_IMAGE} touch foobear

    #   - name: Check local is mutated after dev env exit
    #     run: "[ -f foobear ]"

  build-and-push-branch-unvetted:
    uses: brianjbayer/gh-actions-test-bed/.github/workflows/build-push-image.yml@reusable-workflows
    with:
      image: ${{ github.repository }}_${{ github.head_ref }}_unvetted:${{ github.event.pull_request.head.sha }}
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  vet-code-standards:
    needs: build-and-push-branch-devenv
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: dockercomposerun rubocop on development environment
        run: "APP_IMAGE=${DEVENV_IMAGE} ./script/dockercomposerun -d bundle exec rake rubocop"

  vet-dependency-security:
    needs: build-and-push-branch-devenv
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: dockercomposerun bundle-audit on development environment
        run: "APP_IMAGE=${DEVENV_IMAGE} ./script/dockercomposerun -d bundle exec bundle-audit check --update"

  vet-e2e-tests-deploy-image:
    needs: build-and-push-branch-unvetted
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: dockercomposerun unvetted image
        run: "APP_IMAGE=${UNVETTED_IMAGE} ./script/dockercomposerun -c"

  vet-e2e-tests-devenv-image:
    needs: build-and-push-branch-devenv
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: dockercomposerun devenv image
        run: "APP_IMAGE=${DEVENV_IMAGE} ./script/dockercomposerun -d bundle exec rspec"

  push-branch-vetted-deploy-image:
    needs: [vet-code-standards, vet-dependency-security, vet-e2e-tests-deploy-image]
    uses: brianjbayer/gh-actions-test-bed/.github/workflows/pull-push-image.yml@reusable-workflows
    with:
      # Pull unvetted branch image
      pull_as: ${{ github.repository }}_${{ github.head_ref }}_unvetted:${{ github.event.pull_request.head.sha }}
      # Push Vetted Image
      push_as: ${{ github.repository }}_${{ github.head_ref }}:${{ github.event.pull_request.head.sha }}
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # runs-on: ubuntu-latest

    # steps:
    #   - uses: actions/checkout@v1

    #   - name: Unvetted deploy image name
    #     run: echo "Unvetted deploy Image [${UNVETTED_IMAGE}]"

    #   - name: Vetted deploy image name
    #     run: echo "Vetted deploy Image [${VETTED_IMAGE}]"

    #   - name: Login to DockerHub Registry
    #     run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    #   - name: Pull unvetted deploy image and Push as vetted
    #     run: ./.github/scripts/docker-pull-push ${UNVETTED_IMAGE} ${VETTED_IMAGE}

    #   - name: Logout of DockerHub Registry
    #     run: docker logout
