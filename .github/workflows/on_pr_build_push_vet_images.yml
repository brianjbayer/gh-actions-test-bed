name: Build and Vet

on:
  pull_request:
    branches:
      - main

jobs:

  # --- Detect Changed Files ---

  detect-changed-files:
    name: Detect Changed Files Using Git
    uses: brianjbayer/actions-image-cicd/.github/workflows/git_detect_changed_files.yml@add-git-detect-changed-files
    with:
      file_pattern: 'db/migrate/*'

  check-detect-changed-files:
    name: Check Detect Changed Files
    runs-on: ubuntu-latest
    needs: detect-changed-files
    steps:
      - name: Check any changed
        run: |
          if [ "${{ needs.detect-changed-files.outputs.any_changed }}" = "true" ]; then
            echo "Changed files detected "
          else
          echo "Changed files detected "
          fi

  # --- Image Names ---

  image-names:
    name: PR (Branch) Image Names
    uses: brianjbayer/actions-image-cicd/.github/workflows/image_names.yml@v0.2

    with:
      add_branch_name: true

  # --- Build and Push Images ---

  buildx-and-push-dev-image:
    name: Build Development Image
    needs:
      - image-names
    uses: brianjbayer/actions-image-cicd/.github/workflows/buildx_amd_arm_image.yml@v0.2
    with:
      image: ${{ needs.image-names.outputs.dev_image }}
      buildopts: --target devenv
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  buildx-and-push-unvetted-image:
    name: Build Deployment (Unvetted) Image
    needs:
      - image-names
    uses: brianjbayer/actions-image-cicd/.github/workflows/buildx_amd_arm_image.yml@v0.2
    with:
      image: ${{ needs.image-names.outputs.unvetted_image }}
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}


  # --- Vet Images ---

  vet-lint-dependency-security-tests:
    name: Vet Code Quality
    needs:
      - image-names
      - buildx-and-push-dev-image
    uses: brianjbayer/actions-image-cicd/.github/workflows/vet_code_standards.yml@v0.2
    with:
      lint_command: "APP_IMAGE=${{ needs.image-names.outputs.dev_image }} ./script/dockercomposerun -do ./script/run lint"
      dependency_security_command: "APP_IMAGE=${{ needs.image-names.outputs.dev_image }} ./script/dockercomposerun -do ./script/run secscan"
      tests_command: "RAILS_ENV=test APP_IMAGE=${{ needs.image-names.outputs.dev_image }} ./script/dockercomposerun -d ./script/run tests"

  # --- Promote Vetted Image If It Passes ---

  copy-branch-vetted-deploy-image:
    name: Promote Vetted Deployment Image
    needs:
      - image-names
      - vet-lint-dependency-security-tests
    uses: brianjbayer/actions-image-cicd/.github/workflows/copy_image.yml@v0.2
    with:
      source_image: ${{ needs.image-names.outputs.unvetted_image }}
      target_image: ${{ needs.image-names.outputs.vetted_image }}
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
