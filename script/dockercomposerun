#!/bin/sh

# ----------------------------------------------------------------------
# This script runs the project docker-compose framework.
#
# - The arguments to this script are passed to the browsertests service
#   as the command override
#
# - Any environment variables set when calling this script are passed
#   through to the docker-compose framework
#   (e.g. configuration other than the defaults)
#
# - Set environment variable USE_CI for specifying an APP_IMAGE
#   and using the docker-compose CI environment (e.g. USE_CI= )
#
# - Set environment variable USE_DEVENV for specifying an APP_IMAGE
#   and using the docker-compose dev environment (e.g. USE_DEVENV= )
# ----------------------------------------------------------------------

# Exit script on any errors
set -e

echo ''
echo "ENVIRONMENT VARIABLES..."
env
echo ''

echo 'DOCKER VERSION...'
docker --version
docker-compose --version
echo ''

echo 'DOCKER-COMPOSE COMMAND...'
docker_compose_command='docker-compose -f docker-compose.yml '

if [ ! -z ${USE_CI+set} ]; then
  echo "...Using CI Environment with Image [${APP_IMAGE}]"
  docker_compose_command="${docker_compose_command} -f docker-compose.ci.yml "
fi

if [ ! -z ${USE_DEVENV+set} ]; then
  echo "...Using Development Environment with Image [${APP_IMAGE}]"
  docker_compose_command="${docker_compose_command} -f docker-compose.dev.yml "
fi
echo "...COMMAND: [${docker_compose_command}]"
echo ''

echo 'DOCKER-COMPOSE CONFIGURATION...'
$docker_compose_command config
echo ''

echo 'DOCKER-COMPOSE PULLING...'
set +e
$docker_compose_command pull
echo '...Allowing pull errors (for local images)'
set -e
echo ''

echo 'DOCKER IMAGES...'
docker images
echo ''

echo "DOCKER-COMPOSE RUNNING [$@]..."
# Allow to fail but catch return code
set +e
$docker_compose_command run app "$@"
run_return_code=$?
# NOTE return code must be caught before any other command
set -e
echo ''

if [ $run_return_code -eq 0 ]; then
    run_disposition='PASSED'
else
    run_disposition='FAILED'
fi
echo "...RUN [${run_disposition}] WITH RETURN CODE [${run_return_code}]"
echo ''

echo 'DOCKER-COMPOSE DOWN...'
$docker_compose_command down
echo ''

echo "EXITING WITH ${run_disposition} RUN RETURN CODE ${run_return_code}"
exit $run_return_code
